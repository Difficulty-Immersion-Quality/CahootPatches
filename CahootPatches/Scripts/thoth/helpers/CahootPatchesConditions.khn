function CHT_ArcaneAcuityGlovesCondition()
    return IsSmiteSpells()
    | SpellId('Target_BoomingBlade_ClassSpell')
    | IsSpellChildOrVariantFromContext('Target_BoomingBlade_ClassSpell')
    | SpellId('Target_BoomingBlade')
    | IsSpellChildOrVariantFromContext('Target_BoomingBlade')
    | SpellId('Target_BoomingBlade')
    | IsSpellChildOrVariantFromContext('Target_BoomingBlade')
    | SpellId('Target_EnsnaringStrike')
    | SpellId('Projectile_EnsnaringStrike')
    | IsSpellChildOrVariantFromContext('Target_EnsnaringStrike')
    | IsSpellChildOrVariantFromContext('Projectile_EnsnaringStrike')
    | SpellId('Projectile_HailOfThorns')
    | IsSpellChildOrVariantFromContext('Projectile_HailOfThorns')
    | (HasStatus('FLAME_BLADE',GetActiveWeapon()) & IsMeleeSpellAttack()) | (HasStatus('FLAME_BLADE',GetActiveWeapon(context.Source, false)) & IsMeleeSpellAttack())
    | (HasStatus('FLAME_BLADE_4',GetActiveWeapon()) & IsMeleeSpellAttack()) | (HasStatus('FLAME_BLADE_4',GetActiveWeapon(context.Source, false)) & IsMeleeSpellAttack())
    | (HasStatus('FLAME_BLADE_6',GetActiveWeapon()) & IsMeleeSpellAttack()) | (HasStatus('FLAME_BLADE_6',GetActiveWeapon(context.Source, false)) & IsMeleeSpellAttack())
    | (HasStatus('SHADOW_BLADE',GetActiveWeapon()) & IsMeleeWeaponAttack()) | (HasStatus('SHADOW_BLADE',GetActiveWeapon(context.Source, false)) & IsMeleeWeaponAttack())
    | (IsSpell() & IsWeaponAttack())
	| (IsCantrip() & IsWeaponAttack())
end

function CHT_BanishingSmiteCheck(entity)
    entity = entity or context.Target
    return ConditionResult(entity.HPPercentage < 50)
end

-- Spell level (not Power level)
function CHT_IsSpellLevelEqualToOrLessThan(value)
	if value == 0 then
		return IsCantrip()
	elseif value == 1 then
		return IsCantrip() | IsSpellLevel(1)
	elseif value == 2 then
		return IsCantrip() | IsSpellLevel(1) | IsSpellLevel(2)
	elseif value == 3 then
		return IsCantrip() | IsSpellLevel(1) | IsSpellLevel(2) | IsSpellLevel(3)
	elseif value == 4 then
		return IsCantrip() | IsSpellLevel(1) | IsSpellLevel(2) | IsSpellLevel(3) | IsSpellLevel(4)
	elseif value == 5 then
		return IsCantrip() | IsSpellLevel(1) | IsSpellLevel(2) | IsSpellLevel(3) | IsSpellLevel(4) | IsSpellLevel(5)
	elseif value == 6 then
		return IsCantrip() | IsSpellLevel(1) | IsSpellLevel(2) | IsSpellLevel(3) | IsSpellLevel(4) | IsSpellLevel(5) | IsSpellLevel(6)
    elseif value == 7 then
		return IsCantrip() | IsSpellLevel(1) | IsSpellLevel(2) | IsSpellLevel(3) | IsSpellLevel(4) | IsSpellLevel(5) | IsSpellLevel(6) | IsSpellLevel(7)
	elseif value == 8 then
		return IsCantrip() | IsSpellLevel(1) | IsSpellLevel(2) | IsSpellLevel(3) | IsSpellLevel(4) | IsSpellLevel(5) | IsSpellLevel(6) | IsSpellLevel(7) | IsSpellLevel(8)
	elseif value == 9 then
		return IsCantrip() | IsSpellLevel(1) | IsSpellLevel(2) | IsSpellLevel(3) | IsSpellLevel(4) | IsSpellLevel(5) | IsSpellLevel(6) | IsSpellLevel(7) | IsSpellLevel(8) | IsSpellLevel(9)
    end
end

function CHT_DivineFortuneCheck()
    return (CHT_IsSpellLevelEqualToOrLessThan(4) & HasUseCosts('SpellSlot')) | HasUseCosts('ChannelDivinity')
end

function CHT_HasHelpableCondition()
    result = HasAnyStatus({'SG_Helpable_Condition','DOWNED','HAG_DOWNED','SCL_DOWNED','SG_Prone','SG_Restrained','PRONE','SLEEPING','SLEEP','ENSNARING_STRIKE','WEB','BURNING','HYPNOTIC_PATTERN','COL_NIGHTSONG_SOULCAGE','FeywildsKiss_DOWNED'}, {}, {})
    return ConditionResult(result.Result, {ConditionError("HasNotHelpableCondition")})
end

function CHT_IsBanishSpell()
	return SpellID('Target_Banishment') | IsSpellChildOrVariantFromContext('Target_Banishment') | SpellID('Shout_WildMagic_Banish') | SpellID('Shout_WildMagic_Banished') | SpellID('OO_Shout_BanishUnholy') | SpellID('Target_DispelEvilAndGood_Dismissal')
end

function CHT_IsSmite()
    return SpellId('Target_Smite_Banishing') | SpellId('Projectile_Smite_Banishing') | IsSpellChildOrVariantFromContext('Target_Smite_Banishing') | IsSpellChildOrVariantFromContext('Projectile_Smite_Banishing') | SpellId('Target_Smite_Branding') | IsSpellChildOrVariantFromContext('Target_Smite_Branding') | SpellId('Projectile_Smite_Branding') | IsSpellChildOrVariantFromContext('Projectile_Smite_Branding') | SpellId('Target_Smite_Blinding') | IsSpellChildOrVariantFromContext('Target_Smite_Blinding') | SpellId('Target_Smite_Searing') | IsSpellChildOrVariantFromContext('Target_Smite_Searing') | SpellId('Target_StaggeringSmite') | IsSpellChildOrVariantFromContext('Target_StaggeringSmite') | SpellId('Target_Smite_Thunderous') | IsSpellChildOrVariantFromContext('Target_Smite_Thunderous') | SpellId('Target_Smite_Wrathful') | IsSpellChildOrVariantFromContext('Target_Smite_Wrathful') | SpellId('Target_Smite_Divine') | IsSpellChildOrVariantFromContext('Target_Smite_Divine') | SpellId('Target_Smite_Divine_Acid') | IsSpellChildOrVariantFromContext('Target_Smite_Divine_Acid') | SpellId('Target_Smite_Divine_Chaos') | IsSpellChildOrVariantFromContext('Target_Smite_Divine_Chaos') | SpellId('Target_Smite_Divine_Cold') | IsSpellChildOrVariantFromContext('Target_Smite_Divine_Cold') | SpellId('Target_Smite_Divine_Fire') | IsSpellChildOrVariantFromContext('Target_Smite_Divine_Fire') | SpellId('Target_Smite_Divine_Force') | IsSpellChildOrVariantFromContext('Target_Smite_Divine_Force') | SpellId('Target_Smite_Divine_Lightning') | IsSpellChildOrVariantFromContext('Target_Smite_Divine_Lightning') | SpellId('Target_Smite_Divine_Necro') | IsSpellChildOrVariantFromContext('Target_Smite_Divine_Necro') | SpellId('Target_Smite_Divine_Poison') | IsSpellChildOrVariantFromContext('Target_Smite_Divine_Poison') | SpellId('Target_Smite_Divine_Psychic') | IsSpellChildOrVariantFromContext('Target_Smite_Divine_Psychic') | SpellId('Target_Smite_Divine_Thunder') | IsSpellChildOrVariantFromContext('Target_Smite_Divine_Thunder') | SpellId('Target_Smite_Divine_War') | IsSpellChildOrVariantFromContext('Target_Smite_Divine_War') | SpellId('Target_Smite_Unholy_Oathbreaker') | IsSpellChildOrVariantFromContext('Target_Smite_Unholy_Oathbreaker')
end